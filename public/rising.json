{"kind": "Listing", "data": {"after": null, "dist": 24, "modhash": "9usggfeyvx97d32cf3ed991f0f60b66006f1b26b5cea6ff531", "geo_filter": "", "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I have used Vue.js in my first job after graduation, it was great, I then moved on to another job because I was being severly underpaid. This job however I didn\u2019t really think too much about the technologies because of how desperate I was and it came to bite me later on. My current job doesn\u2019t use a frontend framework (React, Vue or Angular) not even javascript as it\u2019s just html pages coming from server, it was a huge step backwards in terms of frontend tooling and learning, I wasn\u2019t learning anything.\n\nIn the mean time, I started picking up react for better opportunities, I have now been learning react and it\u2019s eco system for a year now and I have a good grasp of it.\n\nI\u2019m looking to start job hunting again, this time round, I don\u2019t want to end up regretting my decision again, so I wanted to ask, when applying to jobs is it stupid to ignore jobs that are in angular/vue  and stick to React for a stable career?", "author_fullname": "t2_cqdj105d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is it stupid to reject jobs that aren\u2019t in react?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15m4x0q", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 39, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 39, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1691555971.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691555685.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have used Vue.js in my first job after graduation, it was great, I then moved on to another job because I was being severly underpaid. This job however I didn\u2019t really think too much about the technologies because of how desperate I was and it came to bite me later on. My current job doesn\u2019t use a frontend framework (React, Vue or Angular) not even javascript as it\u2019s just html pages coming from server, it was a huge step backwards in terms of frontend tooling and learning, I wasn\u2019t learning anything.&lt;/p&gt;\n\n&lt;p&gt;In the mean time, I started picking up react for better opportunities, I have now been learning react and it\u2019s eco system for a year now and I have a good grasp of it.&lt;/p&gt;\n\n&lt;p&gt;I\u2019m looking to start job hunting again, this time round, I don\u2019t want to end up regretting my decision again, so I wanted to ask, when applying to jobs is it stupid to ignore jobs that are in angular/vue  and stick to React for a stable career?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15m4x0q", "is_robot_indexable": true, "report_reasons": null, "author": "spicewind", "discussion_type": null, "num_comments": 33, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15m4x0q/is_it_stupid_to_reject_jobs_that_arent_in_react/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15m4x0q/is_it_stupid_to_reject_jobs_that_arent_in_react/", "subreddit_subscribers": 354956, "created_utc": 1691555685.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Say you've got a common business object, say a Jira ticket or Github issue, and your API is returning normalised data that looks like this: \n\n```\n{\n    id: \"123\", \n    assigneeId: \"userid-111\", \n    tagIds: [\"tag-id-1\", \"tag-id-2\"], \n    project: \"project-id-5\", \n    //etc. \n}\n```\n\nAnd you want to be displaying this data as a table, but you've got to denormalise it, ie. you have to look up the `/users/userid-111` to get the user's name, `/tags/tag-id-1` and `/tags/tag-id-2` to get the tag names etc. \n\nAs far as I see it, you can denormalise the data early, or denormalise it late. \n\n**Denormalise early**\n\nIn this strategy, we do all of the user, tags, projects look up while we are fetching the business object itself. We can still take advantage of our state managements caching ability. \n\n```typescript\n\nfunction useBusinessObject(id: string) : EnrichedBusinessObject {\n    const businessObjectResult = useQuery(...); // Whatever state management tool you are using; \n\n    // Whatever transformation logic \n    return enrichedBusinessObject;      \n}\n\n```\n\n**Denormalise late**\n\nIn this strategy, our state management returns data as it looks on the from the API. Allow the rendering to fetch the individual bits of data they need. \n\neg. \n\n```tsx\nfunction BusinessObjectTableRow(props) {\n     const objectId = props.objectId; \n     \n     const businessObjectResult = useBusinessObject(objectId); \n\n     if(businessObject.isLoading) {\n        return &lt;Loading/&gt; \n     }\n\n     const businessObject = businessObjectResult.data; \n     \n\n     return &lt;tr&gt;\n        &lt;td&gt;&lt;UserDisplay userId={data.assigneeId}/&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;TagsDisplay tagIds{data.tagIds}/&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;ProjectDisplay projectId={data.projectId}/&gt;&lt;/td&gt;\n\n     &lt;/tr&gt;\n}\n\nfunction UserDisplay(props){\n    const userResult = useUser(props.userId); \n\n    return &lt;&gt;userResult.data.name&lt;/&gt;\n}\n```\n\n\n\n\n**My opinion**\n\nPersonally I prefer the second approach. IMO it's much easier to pass around data that is a direct reflection of what the API gives you, rather than to have to understand what implicit data transformations are occurring in the state management layer.  \n\nYou could make an argument that this will lead to loading flags everywhere, though I think that Suspense alleviates that a decent amount. \n\nAny other takes?", "author_fullname": "t2_15bk7o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Denormalise data early or late?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15m74vk", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 5, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691562796.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Say you&amp;#39;ve got a common business object, say a Jira ticket or Github issue, and your API is returning normalised data that looks like this: &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n{\n    id: &amp;quot;123&amp;quot;, \n    assigneeId: &amp;quot;userid-111&amp;quot;, \n    tagIds: [&amp;quot;tag-id-1&amp;quot;, &amp;quot;tag-id-2&amp;quot;], \n    project: &amp;quot;project-id-5&amp;quot;, \n    //etc. \n}\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;And you want to be displaying this data as a table, but you&amp;#39;ve got to denormalise it, ie. you have to look up the &lt;code&gt;/users/userid-111&lt;/code&gt; to get the user&amp;#39;s name, &lt;code&gt;/tags/tag-id-1&lt;/code&gt; and &lt;code&gt;/tags/tag-id-2&lt;/code&gt; to get the tag names etc. &lt;/p&gt;\n\n&lt;p&gt;As far as I see it, you can denormalise the data early, or denormalise it late. &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Denormalise early&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;In this strategy, we do all of the user, tags, projects look up while we are fetching the business object itself. We can still take advantage of our state managements caching ability. &lt;/p&gt;\n\n&lt;p&gt;```typescript&lt;/p&gt;\n\n&lt;p&gt;function useBusinessObject(id: string) : EnrichedBusinessObject {\n    const businessObjectResult = useQuery(...); // Whatever state management tool you are using; &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Whatever transformation logic \nreturn enrichedBusinessObject;      \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Denormalise late&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;In this strategy, our state management returns data as it looks on the from the API. Allow the rendering to fetch the individual bits of data they need. &lt;/p&gt;\n\n&lt;p&gt;eg. &lt;/p&gt;\n\n&lt;p&gt;```tsx\nfunction BusinessObjectTableRow(props) {\n     const objectId = props.objectId; &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; const businessObjectResult = useBusinessObject(objectId); \n\n if(businessObject.isLoading) {\n    return &amp;lt;Loading/&amp;gt; \n }\n\n const businessObject = businessObjectResult.data; \n\n\n return &amp;lt;tr&amp;gt;\n    &amp;lt;td&amp;gt;&amp;lt;UserDisplay userId={data.assigneeId}/&amp;gt;&amp;lt;/td&amp;gt;\n    &amp;lt;td&amp;gt;&amp;lt;TagsDisplay tagIds{data.tagIds}/&amp;gt;&amp;lt;/td&amp;gt;\n    &amp;lt;td&amp;gt;&amp;lt;ProjectDisplay projectId={data.projectId}/&amp;gt;&amp;lt;/td&amp;gt;\n\n &amp;lt;/tr&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;function UserDisplay(props){\n    const userResult = useUser(props.userId); &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return &amp;lt;&amp;gt;userResult.data.name&amp;lt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;My opinion&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Personally I prefer the second approach. IMO it&amp;#39;s much easier to pass around data that is a direct reflection of what the API gives you, rather than to have to understand what implicit data transformations are occurring in the state management layer.  &lt;/p&gt;\n\n&lt;p&gt;You could make an argument that this will lead to loading flags everywhere, though I think that Suspense alleviates that a decent amount. &lt;/p&gt;\n\n&lt;p&gt;Any other takes?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "01a7aefe-4b81-11ea-bbb7-0e04580e4d4d", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "15m74vk", "is_robot_indexable": true, "report_reasons": null, "author": "davidblacksheep", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15m74vk/denormalise_data_early_or_late/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15m74vk/denormalise_data_early_or_late/", "subreddit_subscribers": 354956, "created_utc": 1691562796.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_35whz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "My Experience Modernizing the Redux Packages to ESM", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_15ljbhq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "ups": 74, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 74, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/SnFhMSTCQzaxDsIsoaibNwXWmTCYCOdZzhQ1FqRKy2I.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1691503821.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.isquaredsoftware.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://blog.isquaredsoftware.com/2023/08/esm-modernization-lessons/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/i8A8aL9stIh83oCfU20Fe7jFagjEhbBRMZ1ndPdzCC0.jpg?auto=webp&amp;s=7df09d213e0d5853d350f69e18253ee16e671fda", "width": 300, "height": 300}, "resolutions": [{"url": "https://external-preview.redd.it/i8A8aL9stIh83oCfU20Fe7jFagjEhbBRMZ1ndPdzCC0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6c0a0360814ce97f94c634ff3bebbe58ec6777fa", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/i8A8aL9stIh83oCfU20Fe7jFagjEhbBRMZ1ndPdzCC0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9e52cb0453f8e80641149b8ce9d6cbce966ecaa0", "width": 216, "height": 216}], "variants": {}, "id": "Ztse7p8z_zwBLrbdTEAviHbJxrc89hpH5E_RSfQMlYA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "15ljbhq", "is_robot_indexable": true, "report_reasons": null, "author": "acemarke", "discussion_type": null, "num_comments": 29, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15ljbhq/my_experience_modernizing_the_redux_packages_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.isquaredsoftware.com/2023/08/esm-modernization-lessons/", "subreddit_subscribers": 354956, "created_utc": 1691503821.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hey everyone,\n\nI'm coming to React from Vue, and sorely missing two way data binding when dealing with large numbers of elements (eg. a form with multiple fields).\n\nIn Vue, this would be achieved by doing something along the lines of:\n\n    const data = reactive({field1: 'default value', field2: 'default value'});\n    //followed by this in the template\n    &lt;input v-model=\"data.field1\" /&gt;\n    &lt;input v-model=\"data.field2\" /&gt;\n\nWhereas in React it seems that this would be the normal solution:\n\n    const [field1, setField1] = useState('default value');\n    const [field2, setField2] = useState('default value');\n    //followed by this in JSX\n    &lt;input value={field1} onChange={e =&gt; setField1(e.target.value)} /&gt;\n    &lt;input value={field2} onChange={e =&gt; setField2(e.target.value)} /&gt;\n\nThis seems fine when there are just a couple of elements that need to be bound, but an enormous amount of boilerplate when there are a larger number of elements on the page.\n\nIs there some sort of design pattern people are following for cases like this? Or are people generally just toughing it out and writing all that boilerplate?\n\nThanks in advance :)", "author_fullname": "t2_mmlo9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Design pattern for two way data binding for large numbers of elements", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_15me7x0", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691584897.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m coming to React from Vue, and sorely missing two way data binding when dealing with large numbers of elements (eg. a form with multiple fields).&lt;/p&gt;\n\n&lt;p&gt;In Vue, this would be achieved by doing something along the lines of:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const data = reactive({field1: &amp;#39;default value&amp;#39;, field2: &amp;#39;default value&amp;#39;});\n//followed by this in the template\n&amp;lt;input v-model=&amp;quot;data.field1&amp;quot; /&amp;gt;\n&amp;lt;input v-model=&amp;quot;data.field2&amp;quot; /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Whereas in React it seems that this would be the normal solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const [field1, setField1] = useState(&amp;#39;default value&amp;#39;);\nconst [field2, setField2] = useState(&amp;#39;default value&amp;#39;);\n//followed by this in JSX\n&amp;lt;input value={field1} onChange={e =&amp;gt; setField1(e.target.value)} /&amp;gt;\n&amp;lt;input value={field2} onChange={e =&amp;gt; setField2(e.target.value)} /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This seems fine when there are just a couple of elements that need to be bound, but an enormous amount of boilerplate when there are a larger number of elements on the page.&lt;/p&gt;\n\n&lt;p&gt;Is there some sort of design pattern people are following for cases like this? Or are people generally just toughing it out and writing all that boilerplate?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15me7x0", "is_robot_indexable": true, "report_reasons": null, "author": "emptee_m", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15me7x0/design_pattern_for_two_way_data_binding_for_large/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15me7x0/design_pattern_for_two_way_data_binding_for_large/", "subreddit_subscribers": 354956, "created_utc": 1691584897.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hey guys so i'm trying to login with the reddit OAuth and need to host the site to github/gh-pages, so, as far as i understand I have to use HashRouter with gh-pages but the this type of router does'nt seem to work with oAuth as there can\u00b4t be fragments in the redirect\\_uri. I am relatively new to the webdev scene so forgive my naivety.  \nIs it possible to use BroweserRouter with github pages and how the hell do i implement this? I've been messing around doing this for 3 days!! Thanks all for any help.  \nany other solutions are VERY welcome! For completeness here are my package.json and webpack.config files.\n\n  \n\\*\\*\\*WEBPACK.CONFIG.JS\\*\\*\\*  \nconst path = require(\"path\");  \nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");  \nmodule.exports = {  \n  entry: \"./src/index.js\",  \n  output: {  \nfilename: \"main.js\",  \npath: path.resolve(\\_\\_dirname, \"build\"),  \npublicPath: \"/\",  \n  },  \n  devtool: 'eval-source-map',  \n  devServer: {  \nhistoryApiFallback: true,  \nhot: true,  \nport: 3000,  \n  },  \n  module: {  \nrules: \\[  \n{  \ntest: /\\\\.(js|jsx)$/,  \nexclude: /node\\_modules/,  \nuse: \\[\"babel-loader\"\\],  \n},  \n{  \ntest: /\\\\.css$/i,  \nexclude: /node\\_modules/,  \nuse: \\[\"style-loader\", \"css-loader\"\\],  \n},  \n{  \ntest: /\\\\.(webp|png|avif|jpe?g|gif|bmp|svg)$/i,  \nexclude: /node\\_modules/,  \ntype: \"asset/resource\",  \n},  \n\\],  \n  },  \n  resolve: {  \nextensions: \\[\"\\*\", \".js\", \".jsx\", \".css\"\\],  \n  },  \n  plugins: \\[  \nnew HtmlWebpackPlugin({  \ntemplate: path.join(\\_\\_dirname, \"public\", \"index.html\"),  \n}),  \n  \\],  \n}\n\n\\*\\*\\*PACKAGE.JSON\\*\\*\\*  \n{  \n  \"name\": \"readdit\",  \n  \"version\": \"1.0.0\",  \n  \"main\": \"index.js\",  \n  \"homepage\": \"https://MY\\_USERNAME.github.io/readdit\",  \n  \"scripts\": {  \n\"build\": \"webpack --mode production\",  \n\"start\": \"webpack serve --mode development\",  \n\"predeploy\": \"npm run build\",  \n\"deploy\": \"gh-pages -d build\"  \n  },  \n  \"author\": \"\",  \n  \"license\": \"ISC\",  \n  \"devDependencies\": {  \n\"@babel/core\": \"\\^7.22.9\",  \n\"@babel/preset-env\": \"\\^7.22.9\",  \n\"@babel/preset-react\": \"\\^7.22.5\",  \n\"babel-loader\": \"\\^9.1.3\",  \n\"css-loader\": \"\\^6.8.1\",  \n\"gh-pages\": \"\\^5.0.0\",  \n\"html-webpack-plugin\": \"\\^5.5.3\",  \n\"style-loader\": \"\\^3.3.3\",  \n\"webpack\": \"\\^5.88.2\",  \n\"webpack-cli\": \"\\^5.1.4\",  \n\"webpack-dev-server\": \"\\^4.15.1\"  \n  },  \n  \"dependencies\": {  \n\"firebase\": \"\\^9.23.0\",  \n\"react\": \"\\^18.2.0\",  \n\"react-dom\": \"\\^18.2.0\",  \n\"react-icons\": \"\\^4.10.1\",  \n\"react-router-dom\": \"\\^6.14.2\"  \n  }  \n}", "author_fullname": "t2_cg86h6ga", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Does react-router-dom HashRouter work with OAuth?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_15me26s", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691584475.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys so i&amp;#39;m trying to login with the reddit OAuth and need to host the site to github/gh-pages, so, as far as i understand I have to use HashRouter with gh-pages but the this type of router does&amp;#39;nt seem to work with oAuth as there can\u00b4t be fragments in the redirect_uri. I am relatively new to the webdev scene so forgive my naivety.&lt;br/&gt;\nIs it possible to use BroweserRouter with github pages and how the hell do i implement this? I&amp;#39;ve been messing around doing this for 3 days!! Thanks all for any help.&lt;br/&gt;\nany other solutions are VERY welcome! For completeness here are my package.json and webpack.config files.&lt;/p&gt;\n\n&lt;p&gt;***WEBPACK.CONFIG.JS***&lt;br/&gt;\nconst path = require(&amp;quot;path&amp;quot;);&lt;br/&gt;\nconst HtmlWebpackPlugin = require(&amp;quot;html-webpack-plugin&amp;quot;);&lt;br/&gt;\nmodule.exports = {&lt;br/&gt;\n  entry: &amp;quot;./src/index.js&amp;quot;,&lt;br/&gt;\n  output: {&lt;br/&gt;\nfilename: &amp;quot;main.js&amp;quot;,&lt;br/&gt;\npath: path.resolve(__dirname, &amp;quot;build&amp;quot;),&lt;br/&gt;\npublicPath: &amp;quot;/&amp;quot;,&lt;br/&gt;\n  },&lt;br/&gt;\n  devtool: &amp;#39;eval-source-map&amp;#39;,&lt;br/&gt;\n  devServer: {&lt;br/&gt;\nhistoryApiFallback: true,&lt;br/&gt;\nhot: true,&lt;br/&gt;\nport: 3000,&lt;br/&gt;\n  },&lt;br/&gt;\n  module: {&lt;br/&gt;\nrules: [&lt;br/&gt;\n{&lt;br/&gt;\ntest: /\\.(js|jsx)$/,&lt;br/&gt;\nexclude: /node_modules/,&lt;br/&gt;\nuse: [&amp;quot;babel-loader&amp;quot;],&lt;br/&gt;\n},&lt;br/&gt;\n{&lt;br/&gt;\ntest: /\\.css$/i,&lt;br/&gt;\nexclude: /node_modules/,&lt;br/&gt;\nuse: [&amp;quot;style-loader&amp;quot;, &amp;quot;css-loader&amp;quot;],&lt;br/&gt;\n},&lt;br/&gt;\n{&lt;br/&gt;\ntest: /\\.(webp|png|avif|jpe?g|gif|bmp|svg)$/i,&lt;br/&gt;\nexclude: /node_modules/,&lt;br/&gt;\ntype: &amp;quot;asset/resource&amp;quot;,&lt;br/&gt;\n},&lt;br/&gt;\n],&lt;br/&gt;\n  },&lt;br/&gt;\n  resolve: {&lt;br/&gt;\nextensions: [&amp;quot;*&amp;quot;, &amp;quot;.js&amp;quot;, &amp;quot;.jsx&amp;quot;, &amp;quot;.css&amp;quot;],&lt;br/&gt;\n  },&lt;br/&gt;\n  plugins: [&lt;br/&gt;\nnew HtmlWebpackPlugin({&lt;br/&gt;\ntemplate: path.join(__dirname, &amp;quot;public&amp;quot;, &amp;quot;index.html&amp;quot;),&lt;br/&gt;\n}),&lt;br/&gt;\n  ],&lt;br/&gt;\n}&lt;/p&gt;\n\n&lt;p&gt;***PACKAGE.JSON***&lt;br/&gt;\n{&lt;br/&gt;\n  &amp;quot;name&amp;quot;: &amp;quot;readdit&amp;quot;,&lt;br/&gt;\n  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,&lt;br/&gt;\n  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,&lt;br/&gt;\n  &amp;quot;homepage&amp;quot;: &amp;quot;https://MY_USERNAME.github.io/readdit&amp;quot;,&lt;br/&gt;\n  &amp;quot;scripts&amp;quot;: {&lt;br/&gt;\n&amp;quot;build&amp;quot;: &amp;quot;webpack --mode production&amp;quot;,&lt;br/&gt;\n&amp;quot;start&amp;quot;: &amp;quot;webpack serve --mode development&amp;quot;,&lt;br/&gt;\n&amp;quot;predeploy&amp;quot;: &amp;quot;npm run build&amp;quot;,&lt;br/&gt;\n&amp;quot;deploy&amp;quot;: &amp;quot;gh-pages -d build&amp;quot;&lt;br/&gt;\n  },&lt;br/&gt;\n  &amp;quot;author&amp;quot;: &amp;quot;&amp;quot;,&lt;br/&gt;\n  &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot;,&lt;br/&gt;\n  &amp;quot;devDependencies&amp;quot;: {&lt;br/&gt;\n&amp;quot;@babel/core&amp;quot;: &amp;quot;^7.22.9&amp;quot;,&lt;br/&gt;\n&amp;quot;@babel/preset-env&amp;quot;: &amp;quot;^7.22.9&amp;quot;,&lt;br/&gt;\n&amp;quot;@babel/preset-react&amp;quot;: &amp;quot;^7.22.5&amp;quot;,&lt;br/&gt;\n&amp;quot;babel-loader&amp;quot;: &amp;quot;^9.1.3&amp;quot;,&lt;br/&gt;\n&amp;quot;css-loader&amp;quot;: &amp;quot;^6.8.1&amp;quot;,&lt;br/&gt;\n&amp;quot;gh-pages&amp;quot;: &amp;quot;^5.0.0&amp;quot;,&lt;br/&gt;\n&amp;quot;html-webpack-plugin&amp;quot;: &amp;quot;^5.5.3&amp;quot;,&lt;br/&gt;\n&amp;quot;style-loader&amp;quot;: &amp;quot;^3.3.3&amp;quot;,&lt;br/&gt;\n&amp;quot;webpack&amp;quot;: &amp;quot;^5.88.2&amp;quot;,&lt;br/&gt;\n&amp;quot;webpack-cli&amp;quot;: &amp;quot;^5.1.4&amp;quot;,&lt;br/&gt;\n&amp;quot;webpack-dev-server&amp;quot;: &amp;quot;^4.15.1&amp;quot;&lt;br/&gt;\n  },&lt;br/&gt;\n  &amp;quot;dependencies&amp;quot;: {&lt;br/&gt;\n&amp;quot;firebase&amp;quot;: &amp;quot;^9.23.0&amp;quot;,&lt;br/&gt;\n&amp;quot;react&amp;quot;: &amp;quot;^18.2.0&amp;quot;,&lt;br/&gt;\n&amp;quot;react-dom&amp;quot;: &amp;quot;^18.2.0&amp;quot;,&lt;br/&gt;\n&amp;quot;react-icons&amp;quot;: &amp;quot;^4.10.1&amp;quot;,&lt;br/&gt;\n&amp;quot;react-router-dom&amp;quot;: &amp;quot;^6.14.2&amp;quot;&lt;br/&gt;\n  }&lt;br/&gt;\n}&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15me26s", "is_robot_indexable": true, "report_reasons": null, "author": "Practical-Public-427", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15me26s/does_reactrouterdom_hashrouter_work_with_oauth/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15me26s/does_reactrouterdom_hashrouter_work_with_oauth/", "subreddit_subscribers": 354956, "created_utc": 1691584475.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hello everyone. I recently built a simple to use resume builder with Remix, Shadcn/ui and Tailwindcss. No database is used and nothing is stored in database. Please let me know your thoughts as I'm consistently trying to improve it.\n\nIt is not responsive yet.\n\nProject Link: [https://simple-resume-builder.vercel.app](https://simple-resume-builder.vercel.app)  \nIt is open source so please give it a star if you liked \ud83e\udd29:  [https://github.com/RawandDev/simple-resume-builder](https://github.com/RawandDev/simple-resume-builder)", "author_fullname": "t2_6nzdladt", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I built a resume builder", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-show", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_15mdlhx", "quarantine": false, "link_flair_text_color": null, "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/reactjs", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1691585366.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691583254.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone. I recently built a simple to use resume builder with Remix, Shadcn/ui and Tailwindcss. No database is used and nothing is stored in database. Please let me know your thoughts as I&amp;#39;m consistently trying to improve it.&lt;/p&gt;\n\n&lt;p&gt;It is not responsive yet.&lt;/p&gt;\n\n&lt;p&gt;Project Link: &lt;a href=\"https://simple-resume-builder.vercel.app\"&gt;https://simple-resume-builder.vercel.app&lt;/a&gt;&lt;br/&gt;\nIt is open source so please give it a star if you liked \ud83e\udd29:  &lt;a href=\"https://github.com/RawandDev/simple-resume-builder\"&gt;https://github.com/RawandDev/simple-resume-builder&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ab912b", "id": "15mdlhx", "is_robot_indexable": true, "report_reasons": null, "author": "FakeErFy", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15mdlhx/i_built_a_resume_builder/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15mdlhx/i_built_a_resume_builder/", "subreddit_subscribers": 354956, "created_utc": 1691583254.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hey guys so i'm trying to login with the reddit OAuth and need to host the site to github/gh-pages, so, as far as i understand I have to use HashRouter with gh-pages but the this type of router does'nt seem to work with oAuth as there can\u00b4t be fragments in the redirect\\_uri.  I am relatively new to the webdev scene so forgive my naivety.\n\nIs it possible to use BroweserRouter with github pages and how the hell do i implement this? I've been messing around doing this for 3 days!! Thanks all for any help.\n\nany other solutions are VERY welcome!\n\nFor completeness here are my package.json and webpack.config\n\n\\*\\*\\*PACKAGE.JSON\\*\\*\\*\n\n{  \n  \"name\": \"readdit\",  \n  \"version\": \"1.0.0\",  \n  \"main\": \"index.js\",  \n  \"homepage\": \"https://MY\\_USERNAME.github.io/readdit\",  \n  \"scripts\": {  \n\"build\": \"webpack --mode production\",  \n\"start\": \"webpack serve --mode development\",  \n\"predeploy\": \"npm run build\",  \n\"deploy\": \"gh-pages -d build\"  \n  },  \n  \"author\": \"\",  \n  \"license\": \"ISC\",  \n  \"devDependencies\": {  \n\"@babel/core\": \"\\^7.22.9\",  \n\"@babel/preset-env\": \"\\^7.22.9\",  \n\"@babel/preset-react\": \"\\^7.22.5\",  \n\"babel-loader\": \"\\^9.1.3\",  \n\"css-loader\": \"\\^6.8.1\",  \n\"gh-pages\": \"\\^5.0.0\",  \n\"html-webpack-plugin\": \"\\^5.5.3\",  \n\"style-loader\": \"\\^3.3.3\",  \n\"webpack\": \"\\^5.88.2\",  \n\"webpack-cli\": \"\\^5.1.4\",  \n\"webpack-dev-server\": \"\\^4.15.1\"  \n  },  \n  \"dependencies\": {  \n\"firebase\": \"\\^9.23.0\",  \n\"react\": \"\\^18.2.0\",  \n\"react-dom\": \"\\^18.2.0\",  \n\"react-icons\": \"\\^4.10.1\",  \n\"react-router-dom\": \"\\^6.14.2\"  \n  }  \n}  \n\n\n\\*\\*\\*WEBPACK.CONFIG.JS\\*\\*\\*\n\nconst path = require(\"path\");  \nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");  \nmodule.exports = {  \n  entry: \"./src/index.js\",  \n  output: {  \nfilename: \"main.js\",  \npath: path.resolve(\\_\\_dirname, \"build\"),  \npublicPath: \"/\",  \n  },  \n  devtool: 'eval-source-map',  \n  devServer: {  \nhistoryApiFallback: true,  \nhot: true,  \nport: 3000,  \n  },  \n  module: {  \nrules: \\[  \n{  \ntest: /\\\\.(js|jsx)$/,  \nexclude: /node\\_modules/,  \nuse: \\[\"babel-loader\"\\],  \n},  \n{  \ntest: /\\\\.css$/i,  \nexclude: /node\\_modules/,  \nuse: \\[\"style-loader\", \"css-loader\"\\],  \n},  \n{  \ntest: /\\\\.(webp|png|avif|jpe?g|gif|bmp|svg)$/i,  \nexclude: /node\\_modules/,  \ntype: \"asset/resource\",  \n},  \n\\],  \n  },  \n  resolve: {  \nextensions: \\[\"\\*\", \".js\", \".jsx\", \".css\"\\],  \n  },  \n  plugins: \\[  \nnew HtmlWebpackPlugin({  \ntemplate: path.join(\\_\\_dirname, \"public\", \"index.html\"),  \n}),  \n  \\],  \n}", "author_fullname": "t2_cg86h6ga", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Does react-router-dom HashRouter work with OAuth?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_15mdexj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1691582971.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691582749.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys so i&amp;#39;m trying to login with the reddit OAuth and need to host the site to github/gh-pages, so, as far as i understand I have to use HashRouter with gh-pages but the this type of router does&amp;#39;nt seem to work with oAuth as there can\u00b4t be fragments in the redirect_uri.  I am relatively new to the webdev scene so forgive my naivety.&lt;/p&gt;\n\n&lt;p&gt;Is it possible to use BroweserRouter with github pages and how the hell do i implement this? I&amp;#39;ve been messing around doing this for 3 days!! Thanks all for any help.&lt;/p&gt;\n\n&lt;p&gt;any other solutions are VERY welcome!&lt;/p&gt;\n\n&lt;p&gt;For completeness here are my package.json and webpack.config&lt;/p&gt;\n\n&lt;p&gt;***PACKAGE.JSON***&lt;/p&gt;\n\n&lt;p&gt;{&lt;br/&gt;\n  &amp;quot;name&amp;quot;: &amp;quot;readdit&amp;quot;,&lt;br/&gt;\n  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,&lt;br/&gt;\n  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,&lt;br/&gt;\n  &amp;quot;homepage&amp;quot;: &amp;quot;https://MY_USERNAME.github.io/readdit&amp;quot;,&lt;br/&gt;\n  &amp;quot;scripts&amp;quot;: {&lt;br/&gt;\n&amp;quot;build&amp;quot;: &amp;quot;webpack --mode production&amp;quot;,&lt;br/&gt;\n&amp;quot;start&amp;quot;: &amp;quot;webpack serve --mode development&amp;quot;,&lt;br/&gt;\n&amp;quot;predeploy&amp;quot;: &amp;quot;npm run build&amp;quot;,&lt;br/&gt;\n&amp;quot;deploy&amp;quot;: &amp;quot;gh-pages -d build&amp;quot;&lt;br/&gt;\n  },&lt;br/&gt;\n  &amp;quot;author&amp;quot;: &amp;quot;&amp;quot;,&lt;br/&gt;\n  &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot;,&lt;br/&gt;\n  &amp;quot;devDependencies&amp;quot;: {&lt;br/&gt;\n&amp;quot;@babel/core&amp;quot;: &amp;quot;^7.22.9&amp;quot;,&lt;br/&gt;\n&amp;quot;@babel/preset-env&amp;quot;: &amp;quot;^7.22.9&amp;quot;,&lt;br/&gt;\n&amp;quot;@babel/preset-react&amp;quot;: &amp;quot;^7.22.5&amp;quot;,&lt;br/&gt;\n&amp;quot;babel-loader&amp;quot;: &amp;quot;^9.1.3&amp;quot;,&lt;br/&gt;\n&amp;quot;css-loader&amp;quot;: &amp;quot;^6.8.1&amp;quot;,&lt;br/&gt;\n&amp;quot;gh-pages&amp;quot;: &amp;quot;^5.0.0&amp;quot;,&lt;br/&gt;\n&amp;quot;html-webpack-plugin&amp;quot;: &amp;quot;^5.5.3&amp;quot;,&lt;br/&gt;\n&amp;quot;style-loader&amp;quot;: &amp;quot;^3.3.3&amp;quot;,&lt;br/&gt;\n&amp;quot;webpack&amp;quot;: &amp;quot;^5.88.2&amp;quot;,&lt;br/&gt;\n&amp;quot;webpack-cli&amp;quot;: &amp;quot;^5.1.4&amp;quot;,&lt;br/&gt;\n&amp;quot;webpack-dev-server&amp;quot;: &amp;quot;^4.15.1&amp;quot;&lt;br/&gt;\n  },&lt;br/&gt;\n  &amp;quot;dependencies&amp;quot;: {&lt;br/&gt;\n&amp;quot;firebase&amp;quot;: &amp;quot;^9.23.0&amp;quot;,&lt;br/&gt;\n&amp;quot;react&amp;quot;: &amp;quot;^18.2.0&amp;quot;,&lt;br/&gt;\n&amp;quot;react-dom&amp;quot;: &amp;quot;^18.2.0&amp;quot;,&lt;br/&gt;\n&amp;quot;react-icons&amp;quot;: &amp;quot;^4.10.1&amp;quot;,&lt;br/&gt;\n&amp;quot;react-router-dom&amp;quot;: &amp;quot;^6.14.2&amp;quot;&lt;br/&gt;\n  }&lt;br/&gt;\n}  &lt;/p&gt;\n\n&lt;p&gt;***WEBPACK.CONFIG.JS***&lt;/p&gt;\n\n&lt;p&gt;const path = require(&amp;quot;path&amp;quot;);&lt;br/&gt;\nconst HtmlWebpackPlugin = require(&amp;quot;html-webpack-plugin&amp;quot;);&lt;br/&gt;\nmodule.exports = {&lt;br/&gt;\n  entry: &amp;quot;./src/index.js&amp;quot;,&lt;br/&gt;\n  output: {&lt;br/&gt;\nfilename: &amp;quot;main.js&amp;quot;,&lt;br/&gt;\npath: path.resolve(__dirname, &amp;quot;build&amp;quot;),&lt;br/&gt;\npublicPath: &amp;quot;/&amp;quot;,&lt;br/&gt;\n  },&lt;br/&gt;\n  devtool: &amp;#39;eval-source-map&amp;#39;,&lt;br/&gt;\n  devServer: {&lt;br/&gt;\nhistoryApiFallback: true,&lt;br/&gt;\nhot: true,&lt;br/&gt;\nport: 3000,&lt;br/&gt;\n  },&lt;br/&gt;\n  module: {&lt;br/&gt;\nrules: [&lt;br/&gt;\n{&lt;br/&gt;\ntest: /\\.(js|jsx)$/,&lt;br/&gt;\nexclude: /node_modules/,&lt;br/&gt;\nuse: [&amp;quot;babel-loader&amp;quot;],&lt;br/&gt;\n},&lt;br/&gt;\n{&lt;br/&gt;\ntest: /\\.css$/i,&lt;br/&gt;\nexclude: /node_modules/,&lt;br/&gt;\nuse: [&amp;quot;style-loader&amp;quot;, &amp;quot;css-loader&amp;quot;],&lt;br/&gt;\n},&lt;br/&gt;\n{&lt;br/&gt;\ntest: /\\.(webp|png|avif|jpe?g|gif|bmp|svg)$/i,&lt;br/&gt;\nexclude: /node_modules/,&lt;br/&gt;\ntype: &amp;quot;asset/resource&amp;quot;,&lt;br/&gt;\n},&lt;br/&gt;\n],&lt;br/&gt;\n  },&lt;br/&gt;\n  resolve: {&lt;br/&gt;\nextensions: [&amp;quot;*&amp;quot;, &amp;quot;.js&amp;quot;, &amp;quot;.jsx&amp;quot;, &amp;quot;.css&amp;quot;],&lt;br/&gt;\n  },&lt;br/&gt;\n  plugins: [&lt;br/&gt;\nnew HtmlWebpackPlugin({&lt;br/&gt;\ntemplate: path.join(__dirname, &amp;quot;public&amp;quot;, &amp;quot;index.html&amp;quot;),&lt;br/&gt;\n}),&lt;br/&gt;\n  ],&lt;br/&gt;\n}&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "15mdexj", "is_robot_indexable": true, "report_reasons": null, "author": "Practical-Public-427", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15mdexj/does_reactrouterdom_hashrouter_work_with_oauth/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15mdexj/does_reactrouterdom_hashrouter_work_with_oauth/", "subreddit_subscribers": 354956, "created_utc": 1691582749.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I often see a lot of resumes and portfolios of junior devs who are looking for their first jobs. I want to ask this community to share resumes or portfolio of a senior developer having 2-5yrs of experience. The reason I am asking this is because I am curious to know the complexity of projects or other differences that a senior's portfolio will have when compared with junior's. Because we only see basic CRUD applications in a junior portfolio. Now please don't say that complexity of projects don't matter. Because I don't think that a senior dev will have a weather app or a to-do list app in his portfolio. Please share your thoughts!\n\n(Edit: okay guys I understand 2-5yrs is not senior. Let's take it as an intermediate developer and 10+ for senior developers)", "author_fullname": "t2_sta9j0k0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Senior Developer Portfolio", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15lx7lh", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 11, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1691564530.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691535138.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I often see a lot of resumes and portfolios of junior devs who are looking for their first jobs. I want to ask this community to share resumes or portfolio of a senior developer having 2-5yrs of experience. The reason I am asking this is because I am curious to know the complexity of projects or other differences that a senior&amp;#39;s portfolio will have when compared with junior&amp;#39;s. Because we only see basic CRUD applications in a junior portfolio. Now please don&amp;#39;t say that complexity of projects don&amp;#39;t matter. Because I don&amp;#39;t think that a senior dev will have a weather app or a to-do list app in his portfolio. Please share your thoughts!&lt;/p&gt;\n\n&lt;p&gt;(Edit: okay guys I understand 2-5yrs is not senior. Let&amp;#39;s take it as an intermediate developer and 10+ for senior developers)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "01a7aefe-4b81-11ea-bbb7-0e04580e4d4d", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "15lx7lh", "is_robot_indexable": true, "report_reasons": null, "author": "dev-se", "discussion_type": null, "num_comments": 35, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15lx7lh/senior_developer_portfolio/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15lx7lh/senior_developer_portfolio/", "subreddit_subscribers": 354956, "created_utc": 1691535138.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I've been on the self-studying journey since the end of 2022. I work full time, so studying takes time. \n\nI've finished 2 big Javascript courses on udemy and now I've been learning React for about a month. All is going well, but I'm really lacking on some Javascript features that are really needed on React. I get how they work on paper, but going deeper and more coplex - I just don't understand much. \n\nAll Javascript courses I've seen move forward pretty fast and waste time on a lot of topics that are really not much use for me. For example, how am I supposed to master maping just by doing 2 simple exercises and watching a 8 minute video on it? \n\nSo my question is - is there a Javascript for react course, that really focuses on the features that I'm going to use with React? I've tried to do research on my own, but with no luck. I know that I can just look up stuff on documentation, but a whole package - like a structured course is, would be much nicer to use. Or maybe some of you guys know some good pages where I can exercise those features? I've looked into Codewars, but I'm looking for something bit different. \n\nThanks in advance.", "author_fullname": "t2_2bqwpai9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Javascript course meant exactly for React?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15mc6xd", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691579255.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been on the self-studying journey since the end of 2022. I work full time, so studying takes time. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve finished 2 big Javascript courses on udemy and now I&amp;#39;ve been learning React for about a month. All is going well, but I&amp;#39;m really lacking on some Javascript features that are really needed on React. I get how they work on paper, but going deeper and more coplex - I just don&amp;#39;t understand much. &lt;/p&gt;\n\n&lt;p&gt;All Javascript courses I&amp;#39;ve seen move forward pretty fast and waste time on a lot of topics that are really not much use for me. For example, how am I supposed to master maping just by doing 2 simple exercises and watching a 8 minute video on it? &lt;/p&gt;\n\n&lt;p&gt;So my question is - is there a Javascript for react course, that really focuses on the features that I&amp;#39;m going to use with React? I&amp;#39;ve tried to do research on my own, but with no luck. I know that I can just look up stuff on documentation, but a whole package - like a structured course is, would be much nicer to use. Or maybe some of you guys know some good pages where I can exercise those features? I&amp;#39;ve looked into Codewars, but I&amp;#39;m looking for something bit different. &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "15mc6xd", "is_robot_indexable": true, "report_reasons": null, "author": "ChristianXon", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15mc6xd/javascript_course_meant_exactly_for_react/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15mc6xd/javascript_course_meant_exactly_for_react/", "subreddit_subscribers": 354956, "created_utc": 1691579255.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I'm trying to do a POST method in my React Native application, but every time i get 'ERR\\_NETWORK' , 'Network Error' from axios, meanwhile, when i try the same post method in Postman it works fine.\n\nI appreciate it if someone can help me!\n\n[Line 28 - Post method on the frontend](https://github.com/gstvoli/Service-App/blob/main/src/screens/Login.tsx)\n\n[Server file](https://github.com/gstvoli/Service-App/blob/main/server.js)\n\n[Server Routes](https://github.com/gstvoli/Service-App/blob/main/serverRoutes.js)\n\n[The login func](https://github.com/gstvoli/Service-App/blob/main/src/controllers/SessionController.js)", "author_fullname": "t2_3mpslgsx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React Native - I get Axios Network Error in post method.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15m5cn1", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1691557041.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to do a POST method in my React Native application, but every time i get &amp;#39;ERR_NETWORK&amp;#39; , &amp;#39;Network Error&amp;#39; from axios, meanwhile, when i try the same post method in Postman it works fine.&lt;/p&gt;\n\n&lt;p&gt;I appreciate it if someone can help me!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gstvoli/Service-App/blob/main/src/screens/Login.tsx\"&gt;Line 28 - Post method on the frontend&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gstvoli/Service-App/blob/main/server.js\"&gt;Server file&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gstvoli/Service-App/blob/main/serverRoutes.js\"&gt;Server Routes&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gstvoli/Service-App/blob/main/src/controllers/SessionController.js\"&gt;The login func&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/kko-I0yotvisMruyks4c9GqpfIFUnJWGhxieSkgnf-Q.jpg?auto=webp&amp;s=60723be8784e4be7c09db3abb1abc822b21669f7", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/kko-I0yotvisMruyks4c9GqpfIFUnJWGhxieSkgnf-Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=07595de91ad695df80e602fa8b71a0d4928be7a3", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/kko-I0yotvisMruyks4c9GqpfIFUnJWGhxieSkgnf-Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0ff175f8e6545832c03a7449561c2ac28d24c914", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/kko-I0yotvisMruyks4c9GqpfIFUnJWGhxieSkgnf-Q.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fe0c38d39e7fe79e4f42e06a7dc8891e03dd6b66", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/kko-I0yotvisMruyks4c9GqpfIFUnJWGhxieSkgnf-Q.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8eac92c7cb7a9fab2b282546fcd07f996b55aa4d", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/kko-I0yotvisMruyks4c9GqpfIFUnJWGhxieSkgnf-Q.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=771f74a537c8af9b4e3c6789f81e7bc3bb2b01c2", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/kko-I0yotvisMruyks4c9GqpfIFUnJWGhxieSkgnf-Q.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fcc82889f28078bf8f6b672bf5280d6f6fee13a7", "width": 1080, "height": 540}], "variants": {}, "id": "hwB154oNbCMtzugpelBGrALJS-uAHMvf7V-z0QK2aMw"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15m5cn1", "is_robot_indexable": true, "report_reasons": null, "author": "Nostalgyk", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15m5cn1/react_native_i_get_axios_network_error_in_post/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15m5cn1/react_native_i_get_axios_network_error_in_post/", "subreddit_subscribers": 354956, "created_utc": 1691557041.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I am little new to this. Why use reducer supposed to be better if it decreases code readability and maintainibility.Or let me know what I am doing wrong.\n\n    const initialState = {\n    roomCount: 0,\n    adultCount: 0,\n    childCount: 0,\n    };\n    \n    const roomCounterReducer = (state: CountState, action: CountAction) =&gt; { \n    const { type, payload } = action;\n    \n    switch (type) {\n      case CountActionType?.INCREASE_ROOM_COUNT:\n        if (state.roomCount &lt; min_inv)\n          return {\n            ...state,\n            roomCount:\n              state.roomCount &lt; min_inv\n                ? state.roomCount + payload\n                : state.roomCount,\n          };\n    \n      case CountActionType?.DECREASE_ROOM_COUNT:\n        return {\n          ...state,\n          roomCount:\n            state.roomCount &gt; 0 ? state.roomCount - payload : state.roomCount,\n        };\n    \n      case CountActionType?.INCREASE_ADULT_COUNT:\n        return {\n          ...state,\n          adultCount: state.adultCount + payload,\n        };\n    \n      case CountActionType?.DECREASE_ADULT_COUNT:\n        return {\n          ...state,\n          adultCount:\n            state.adultCount &gt; 0\n              ? state.adultCount - payload\n              : state.adultCount,\n        };\n    \n      case CountActionType?.INCREASE_CHILD_COUNT:\n        return {\n          ...state,\n          childCount: state.childCount + payload,\n        };\n    \n      case CountActionType?.DECREASE_CHILD_COUNT:\n        return {\n          ...state,\n          childCount:\n            state.childCount &gt; 0\n              ? state.childCount - payload\n              : state.childCount,\n        };\n      }\n    };\n    \n    const [roomNumberState, dispatch] = useReducer( roomCounterReducer, initialState );\n\n&amp;#x200B;", "author_fullname": "t2_cik0nm83", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Why reducer is supposed to be better?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15le43n", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 37, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 37, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1691490429.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691490083.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am little new to this. Why use reducer supposed to be better if it decreases code readability and maintainibility.Or let me know what I am doing wrong.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const initialState = {\nroomCount: 0,\nadultCount: 0,\nchildCount: 0,\n};\n\nconst roomCounterReducer = (state: CountState, action: CountAction) =&amp;gt; { \nconst { type, payload } = action;\n\nswitch (type) {\n  case CountActionType?.INCREASE_ROOM_COUNT:\n    if (state.roomCount &amp;lt; min_inv)\n      return {\n        ...state,\n        roomCount:\n          state.roomCount &amp;lt; min_inv\n            ? state.roomCount + payload\n            : state.roomCount,\n      };\n\n  case CountActionType?.DECREASE_ROOM_COUNT:\n    return {\n      ...state,\n      roomCount:\n        state.roomCount &amp;gt; 0 ? state.roomCount - payload : state.roomCount,\n    };\n\n  case CountActionType?.INCREASE_ADULT_COUNT:\n    return {\n      ...state,\n      adultCount: state.adultCount + payload,\n    };\n\n  case CountActionType?.DECREASE_ADULT_COUNT:\n    return {\n      ...state,\n      adultCount:\n        state.adultCount &amp;gt; 0\n          ? state.adultCount - payload\n          : state.adultCount,\n    };\n\n  case CountActionType?.INCREASE_CHILD_COUNT:\n    return {\n      ...state,\n      childCount: state.childCount + payload,\n    };\n\n  case CountActionType?.DECREASE_CHILD_COUNT:\n    return {\n      ...state,\n      childCount:\n        state.childCount &amp;gt; 0\n          ? state.childCount - payload\n          : state.childCount,\n    };\n  }\n};\n\nconst [roomNumberState, dispatch] = useReducer( roomCounterReducer, initialState );\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15le43n", "is_robot_indexable": true, "report_reasons": null, "author": "AshutoshDash99", "discussion_type": null, "num_comments": 36, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15le43n/why_reducer_is_supposed_to_be_better/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15le43n/why_reducer_is_supposed_to_be_better/", "subreddit_subscribers": 354956, "created_utc": 1691490083.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Please help in this scenario  \n\n\nhttps://stackoverflow.com/questions/76864567/when-react-component-loaded-initially-i-am-getting-values-as-undefined-which-are", "author_fullname": "t2_7uxu9qp5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Need help in thsi reducer scenario.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15m4qpt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1691555153.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Please help in this scenario  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/76864567/when-react-component-loaded-initially-i-am-getting-values-as-undefined-which-are\"&gt;https://stackoverflow.com/questions/76864567/when-react-component-loaded-initially-i-am-getting-values-as-undefined-which-are&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799", "width": 316, "height": 316}, "resolutions": [{"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda", "width": 216, "height": 216}], "variants": {}, "id": "nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "15m4qpt", "is_robot_indexable": true, "report_reasons": null, "author": "AdConscious6731", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15m4qpt/need_help_in_thsi_reducer_scenario/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15m4qpt/need_help_in_thsi_reducer_scenario/", "subreddit_subscribers": 354956, "created_utc": 1691555153.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_kej9s", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The simplest example to understand Server Actions in Next.js", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 74, "top_awarded_type": null, "hide_score": false, "name": "t3_15lsznj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": true, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 3, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/N-MaBncS-v_0_1YF_orvjzH65bpUDv8UB420PUlyGyI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1691525616.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "dev.to", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://dev.to/scastiel/the-simplest-example-to-understand-server-actions-in-nextjs-5533", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/taJ_EE4Aj6bPShnmAA0MPwk_AMLGFBxn0R3WRJRmw-Q.jpg?auto=webp&amp;s=336907f4468133115dc6544cbaef674d7d5f1909", "width": 1128, "height": 598}, "resolutions": [{"url": "https://external-preview.redd.it/taJ_EE4Aj6bPShnmAA0MPwk_AMLGFBxn0R3WRJRmw-Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=42340297eafb7405c95e30248ffc627d031bd594", "width": 108, "height": 57}, {"url": "https://external-preview.redd.it/taJ_EE4Aj6bPShnmAA0MPwk_AMLGFBxn0R3WRJRmw-Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=16de82369128836a86cd56575c3e060211abb253", "width": 216, "height": 114}, {"url": "https://external-preview.redd.it/taJ_EE4Aj6bPShnmAA0MPwk_AMLGFBxn0R3WRJRmw-Q.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=aa029c1d3755cf9ad0777808d04520db357251c7", "width": 320, "height": 169}, {"url": "https://external-preview.redd.it/taJ_EE4Aj6bPShnmAA0MPwk_AMLGFBxn0R3WRJRmw-Q.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=05b4c1c91e97baf0477ae3a7372a835388a333ee", "width": 640, "height": 339}, {"url": "https://external-preview.redd.it/taJ_EE4Aj6bPShnmAA0MPwk_AMLGFBxn0R3WRJRmw-Q.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2259d182fb55e8203d9cf32c4bee3ad7efc27bf5", "width": 960, "height": 508}, {"url": "https://external-preview.redd.it/taJ_EE4Aj6bPShnmAA0MPwk_AMLGFBxn0R3WRJRmw-Q.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1755f2c926571c86090d53790c5af969364a1214", "width": 1080, "height": 572}], "variants": {}, "id": "NsIV7eKTont-FPjq_ED576uTOrQ9lE9RSRfpgKNLB_k"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "15lsznj", "is_robot_indexable": true, "report_reasons": null, "author": "scastiel", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15lsznj/the_simplest_example_to_understand_server_actions/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://dev.to/scastiel/the-simplest-example-to-understand-server-actions-in-nextjs-5533", "subreddit_subscribers": 354956, "created_utc": 1691525616.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "    \n          &lt;Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={tags} \n              freeSolo\n              onChange={handleTagChange}\n              renderTags={(value: string[], getTagProps) =&gt; {\n                value.map((option: string, index: number) =&gt; {\n                  // eslint-disable-next-line react/jsx-keyy\n                  &lt;Chip variant=\"outlined\" label={option} {...getTagProps({ index })} /&gt;;\n                  if (value !== values.metadata.keywordTags) {\n                    setValue('metadata.keywordTags', value); // The mutator to add \n                                                             // the tags to the JSON\n                  }\n                });\n              }}\n              renderInput={(params) =&gt; (\n                &lt;TextField\n                  {...params}\n                  name={'metadata.keywordTags'}\n                  variant=\"outlined\"\n                  label=\"Keyword tags (optional)\"\n                /&gt;\n              )}\n            /&gt;\n    \n\nThe onChange sets the different tags in an array and setValue() inside of the render is a mutator that adds the string array of the tags to the data.  \nWhen the component is being used, it correctly stores the array of tags in the data. Only issue is that the chip doesn't show up:  \n\\[no chips\\]([https://i.imgur.com/0FFryj9.png](https://i.stack.imgur.com/WS4IG.png))\n\n&amp;#x200B;\n\n**What I tried:**\n\n    \n         &lt;Autocomplete\n              multiple\n              id=\"tags-filled\"\n              options={tags} \n              freeSolo\n              onChange={handleTagChange}\n              renderTags={(value: string[], getTagProps) =&gt;\n                value.map((option: string, index: number) =&gt; (\n                  // eslint-disable-next-line react/jsx-key\n                  &lt;Chip variant=\"outlined\" label={option} {...getTagProps({ index })} /&gt;\n                ))\n              }\n              renderInput={(params) =&gt; (\n                &lt;TextField\n                  {...params}\n                  name={'metadata.keywordTags'}\n                  variant=\"outlined\"\n                  label=\"Keyword tags (optional)\"\n                /&gt;\n              )}\n            /&gt;\n\nAs you can see, I modified the renderTags a bit (removed some curly braces), and now the chips work: [https://i.imgur.com/FH2y2fz.png](https://i.stack.imgur.com/6GbVz.png)\n\n However, only the last tag is stored into the data: https://i.imgur.com/I5c64fm.png  \nI'm assuming this is because of the name={'metadata.keywordTags'} in the TextField component? What can I do to show the chips and get the correct array of tags stored in the data?  \n\n\n&amp;#x200B;", "author_fullname": "t2_b0iv7r2u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Material UI Autocomplete RenderTags not working with React Final Form mutator", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15m1r8l", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1691546705.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;      &amp;lt;Autocomplete\n          multiple\n          id=&amp;quot;tags-filled&amp;quot;\n          options={tags} \n          freeSolo\n          onChange={handleTagChange}\n          renderTags={(value: string[], getTagProps) =&amp;gt; {\n            value.map((option: string, index: number) =&amp;gt; {\n              // eslint-disable-next-line react/jsx-keyy\n              &amp;lt;Chip variant=&amp;quot;outlined&amp;quot; label={option} {...getTagProps({ index })} /&amp;gt;;\n              if (value !== values.metadata.keywordTags) {\n                setValue(&amp;#39;metadata.keywordTags&amp;#39;, value); // The mutator to add \n                                                         // the tags to the JSON\n              }\n            });\n          }}\n          renderInput={(params) =&amp;gt; (\n            &amp;lt;TextField\n              {...params}\n              name={&amp;#39;metadata.keywordTags&amp;#39;}\n              variant=&amp;quot;outlined&amp;quot;\n              label=&amp;quot;Keyword tags (optional)&amp;quot;\n            /&amp;gt;\n          )}\n        /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The onChange sets the different tags in an array and setValue() inside of the render is a mutator that adds the string array of the tags to the data.&lt;br/&gt;\nWhen the component is being used, it correctly stores the array of tags in the data. Only issue is that the chip doesn&amp;#39;t show up:&lt;br/&gt;\n[no chips](&lt;a href=\"https://i.stack.imgur.com/WS4IG.png\"&gt;https://i.imgur.com/0FFryj9.png&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;What I tried:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;     &amp;lt;Autocomplete\n          multiple\n          id=&amp;quot;tags-filled&amp;quot;\n          options={tags} \n          freeSolo\n          onChange={handleTagChange}\n          renderTags={(value: string[], getTagProps) =&amp;gt;\n            value.map((option: string, index: number) =&amp;gt; (\n              // eslint-disable-next-line react/jsx-key\n              &amp;lt;Chip variant=&amp;quot;outlined&amp;quot; label={option} {...getTagProps({ index })} /&amp;gt;\n            ))\n          }\n          renderInput={(params) =&amp;gt; (\n            &amp;lt;TextField\n              {...params}\n              name={&amp;#39;metadata.keywordTags&amp;#39;}\n              variant=&amp;quot;outlined&amp;quot;\n              label=&amp;quot;Keyword tags (optional)&amp;quot;\n            /&amp;gt;\n          )}\n        /&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As you can see, I modified the renderTags a bit (removed some curly braces), and now the chips work: &lt;a href=\"https://i.stack.imgur.com/6GbVz.png\"&gt;https://i.imgur.com/FH2y2fz.png&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;However, only the last tag is stored into the data: &lt;a href=\"https://i.imgur.com/I5c64fm.png\"&gt;https://i.imgur.com/I5c64fm.png&lt;/a&gt;&lt;br/&gt;\nI&amp;#39;m assuming this is because of the name={&amp;#39;metadata.keywordTags&amp;#39;} in the TextField component? What can I do to show the chips and get the correct array of tags stored in the data?  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/S7aR3CvttQL-qli9WgM2AQNuP0peZ0IKWtwjvgeJQeM.png?auto=webp&amp;s=10295c190cb8e0f78b3efba0f544172afcee960e", "width": 636, "height": 744}, "resolutions": [{"url": "https://external-preview.redd.it/S7aR3CvttQL-qli9WgM2AQNuP0peZ0IKWtwjvgeJQeM.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=41155b067bebdd773e8c1bdf99fde97b70e28053", "width": 108, "height": 126}, {"url": "https://external-preview.redd.it/S7aR3CvttQL-qli9WgM2AQNuP0peZ0IKWtwjvgeJQeM.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=04f54724d6f12f5aa04c53d626330f4d0b96b332", "width": 216, "height": 252}, {"url": "https://external-preview.redd.it/S7aR3CvttQL-qli9WgM2AQNuP0peZ0IKWtwjvgeJQeM.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=727fb5d0718ef2b507a1415f307e13eb031ae579", "width": 320, "height": 374}], "variants": {}, "id": "w6GQPJK5wuGJMTTTCsTHv6DDza1XxNzsTcXyG8buiz8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15m1r8l", "is_robot_indexable": true, "report_reasons": null, "author": "emptycalender", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15m1r8l/material_ui_autocomplete_rendertags_not_working/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15m1r8l/material_ui_autocomplete_rendertags_not_working/", "subreddit_subscribers": 354956, "created_utc": 1691546705.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_tymm9yv3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Radix-UI Themes", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-resource", "downs": 0, "thumbnail_height": 78, "top_awarded_type": null, "hide_score": false, "name": "t3_15lhiev", "quarantine": false, "link_flair_text_color": null, "upvote_ratio": 0.92, "author_flair_background_color": null, "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 9, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/Fhq_uTHetxgssIYJQ-oMOElVCYThnILAeyx5bjoms8Q.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1691499488.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "radix-ui.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://www.radix-ui.com/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/gx2a1WgqW7fEwMXQuJtEtPZWkFfKv5TQTrbakTyb3wc.jpg?auto=webp&amp;s=aeb828b93d8d3b67e8302d007ea0b2e20aeb3068", "width": 3025, "height": 1700}, "resolutions": [{"url": "https://external-preview.redd.it/gx2a1WgqW7fEwMXQuJtEtPZWkFfKv5TQTrbakTyb3wc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=35e6b024e4857825f81edbf5161f7f25d46be4eb", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/gx2a1WgqW7fEwMXQuJtEtPZWkFfKv5TQTrbakTyb3wc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6a8fadb9d81f97eda534df0ee3ab5e893c9a4609", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/gx2a1WgqW7fEwMXQuJtEtPZWkFfKv5TQTrbakTyb3wc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=00d028264fe03dfe0f695dd4be12a42fa898e644", "width": 320, "height": 179}, {"url": "https://external-preview.redd.it/gx2a1WgqW7fEwMXQuJtEtPZWkFfKv5TQTrbakTyb3wc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=108ad52a212cc2a4030c79a871644942976871a4", "width": 640, "height": 359}, {"url": "https://external-preview.redd.it/gx2a1WgqW7fEwMXQuJtEtPZWkFfKv5TQTrbakTyb3wc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c0b1ed106843227423ced523622013f52fe666e5", "width": 960, "height": 539}, {"url": "https://external-preview.redd.it/gx2a1WgqW7fEwMXQuJtEtPZWkFfKv5TQTrbakTyb3wc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=13a4aff8ce012ab91102b4cd3d6ffcd1044f7b06", "width": 1080, "height": 606}], "variants": {}, "id": "R404U5-Eu2GfqCaeu-63QUYityriT3p0Jd-I00KLD5E"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#ffd635", "id": "15lhiev", "is_robot_indexable": true, "report_reasons": null, "author": "rewindedjs", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15lhiev/radixui_themes/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.radix-ui.com/", "subreddit_subscribers": 354956, "created_utc": 1691499488.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Ive been working with react js for the past 3 years, ive been willing to learn typescript. Do anyone knows any good article/course/tutorial to do the switch?", "author_fullname": "t2_d4hfntov", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React to typescript", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15lof03", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691515380.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Ive been working with react js for the past 3 years, ive been willing to learn typescript. Do anyone knows any good article/course/tutorial to do the switch?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "15lof03", "is_robot_indexable": true, "report_reasons": null, "author": "AdMiserable2281", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15lof03/react_to_typescript/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15lof03/react_to_typescript/", "subreddit_subscribers": 354956, "created_utc": 1691515380.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_8md0f", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Free templates for working with headless CMS content", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-show", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15locec", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Show /r/reactjs", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1691515222.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "headlesstemplates.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "url_overridden_by_dest": "https://headlesstemplates.com/", "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "bd8d97ec-8520-11e8-9179-0e39e47dc3fc", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ab912b", "id": "15locec", "is_robot_indexable": true, "report_reasons": null, "author": "wallawe", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15locec/free_templates_for_working_with_headless_cms/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://headlesstemplates.com/", "subreddit_subscribers": 354956, "created_utc": 1691515222.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Which one do you prefer and why?  \nExample plugins [ESLint](https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/order.md) and [Prettier](https://github.com/trivago/prettier-plugin-sort-imports)", "author_fullname": "t2_uk4umitf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Sorting imports ESLint vs Prettier", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15lr7yt", "quarantine": false, "link_flair_text_color": null, "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1691521649.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Which one do you prefer and why?&lt;br/&gt;\nExample plugins &lt;a href=\"https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/order.md\"&gt;ESLint&lt;/a&gt; and &lt;a href=\"https://github.com/trivago/prettier-plugin-sort-imports\"&gt;Prettier&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/jB6odOKRcBF7vLVbmQp9cpbLT2Wh3NL8AE8C9nCzHNA.jpg?auto=webp&amp;s=68c2abeb84c7ab6002904bb1f517e204bc833bc5", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/jB6odOKRcBF7vLVbmQp9cpbLT2Wh3NL8AE8C9nCzHNA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2b2274a9f810acb1c3787863fd55e90476ab61f7", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/jB6odOKRcBF7vLVbmQp9cpbLT2Wh3NL8AE8C9nCzHNA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=68c18c58ebc96f309db7a4f6989f4852f6952dc6", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/jB6odOKRcBF7vLVbmQp9cpbLT2Wh3NL8AE8C9nCzHNA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=633af37f0918ba0c7f13eda6df92d21c18b51f89", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/jB6odOKRcBF7vLVbmQp9cpbLT2Wh3NL8AE8C9nCzHNA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=64115f646d318dd047f909fc92f9986854cafc1b", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/jB6odOKRcBF7vLVbmQp9cpbLT2Wh3NL8AE8C9nCzHNA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4b9ef140fb0659f8acc06a7d81d4164f6d6a0f42", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/jB6odOKRcBF7vLVbmQp9cpbLT2Wh3NL8AE8C9nCzHNA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=b685496fbf21b03157415cfb9fd018bf1bc5c24a", "width": 1080, "height": 540}], "variants": {}, "id": "LsP_yA0c2cOKnOSYbvrX9-4z7u9kT5_tbijtC4wzRpU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "01a7aefe-4b81-11ea-bbb7-0e04580e4d4d", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "15lr7yt", "is_robot_indexable": true, "report_reasons": null, "author": "marko424_", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15lr7yt/sorting_imports_eslint_vs_prettier/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15lr7yt/sorting_imports_eslint_vs_prettier/", "subreddit_subscribers": 354956, "created_utc": 1691521649.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "\n### I am only looking for React for **Web** recs, NOT React Native!\n\nI'm developing a React web app with a map based interface. The ability to use a bottom sheet modal to present information on mobile would be beneficial for UX.\n\nTo my understanding the go to solution would be [react-spring-bottom-sheet](https://github.com/stipsan/react-spring-bottom-sheet/tree/main). However, it appears this repo has been dark sometime and many of the open issue threads are speculating that its been abandoned. \n\nDoes anyone have recommendations for what to use instead?", "author_fullname": "t2_3e2bfdnj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React Bottom Sheet package", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15lqs7i", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1691520924.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1691520668.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h3&gt;I am only looking for React for &lt;strong&gt;Web&lt;/strong&gt; recs, NOT React Native!&lt;/h3&gt;\n\n&lt;p&gt;I&amp;#39;m developing a React web app with a map based interface. The ability to use a bottom sheet modal to present information on mobile would be beneficial for UX.&lt;/p&gt;\n\n&lt;p&gt;To my understanding the go to solution would be &lt;a href=\"https://github.com/stipsan/react-spring-bottom-sheet/tree/main\"&gt;react-spring-bottom-sheet&lt;/a&gt;. However, it appears this repo has been dark sometime and many of the open issue threads are speculating that its been abandoned. &lt;/p&gt;\n\n&lt;p&gt;Does anyone have recommendations for what to use instead?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/kifleI-u0F6jensO5cIjL509kp36CJP14N2l3GXr2HQ.jpg?auto=webp&amp;s=2990fe2fca14bff932bccbc37d31e1f1e50a7a69", "width": 1280, "height": 640}, "resolutions": [{"url": "https://external-preview.redd.it/kifleI-u0F6jensO5cIjL509kp36CJP14N2l3GXr2HQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d946a6d0597aa59dff2c7aaff2ac1398192f59f9", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/kifleI-u0F6jensO5cIjL509kp36CJP14N2l3GXr2HQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=91e4bf3b2a8c7d56239d331ae2a6d10ab2b3d427", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/kifleI-u0F6jensO5cIjL509kp36CJP14N2l3GXr2HQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=73e3fe9b8807c08c9d071f522a37cdda66937bcf", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/kifleI-u0F6jensO5cIjL509kp36CJP14N2l3GXr2HQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=53bcace00f1d4351622cc4e89f1c9001bd7b61e6", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/kifleI-u0F6jensO5cIjL509kp36CJP14N2l3GXr2HQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=057442493764a15a3cdbd39401c096109c28a816", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/kifleI-u0F6jensO5cIjL509kp36CJP14N2l3GXr2HQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a61261f489d36b42445ff0720450ca058c47a464", "width": 1080, "height": 540}], "variants": {}, "id": "_7VDtsYQdHx4uACubu1Kw9wkam9YBfA7eWeu7bwHih0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15lqs7i", "is_robot_indexable": true, "report_reasons": null, "author": "Bright_Marker", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15lqs7i/react_bottom_sheet_package/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15lqs7i/react_bottom_sheet_package/", "subreddit_subscribers": 354956, "created_utc": 1691520668.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hi Can anyone help me with this issue:-\n\nSuppose there are three pages say page A and Page B and Page C in my React application. Now if we edit something and click on the back button in page B, we get a prompt ( cutsom prompt which I have built ) asking whether we want to navigate or not. If we click yes, we move to the previous page i.e, page A and if we click No, we stay on the same page. But Now, if we click on say some id which is a hyperlink, and then move to page C, and there in Page C if we perform the same operation, means if here also on the edit mode we click on the back button, then this time also we get a prompt , but without even clicking yes or no in the prompt, the page reloads by itself i.e, the component re-renders.\n\nBut If I am directly opening Page C, then this issue is not happening. Then it works completely fine. This happens only when we come to this Page C from Page B.", "author_fullname": "t2_bqeqnlkx6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Page Reloads on Back button click", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15lm0tu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691509930.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi Can anyone help me with this issue:-&lt;/p&gt;\n\n&lt;p&gt;Suppose there are three pages say page A and Page B and Page C in my React application. Now if we edit something and click on the back button in page B, we get a prompt ( cutsom prompt which I have built ) asking whether we want to navigate or not. If we click yes, we move to the previous page i.e, page A and if we click No, we stay on the same page. But Now, if we click on say some id which is a hyperlink, and then move to page C, and there in Page C if we perform the same operation, means if here also on the edit mode we click on the back button, then this time also we get a prompt , but without even clicking yes or no in the prompt, the page reloads by itself i.e, the component re-renders.&lt;/p&gt;\n\n&lt;p&gt;But If I am directly opening Page C, then this issue is not happening. Then it works completely fine. This happens only when we come to this Page C from Page B.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "15lm0tu", "is_robot_indexable": true, "report_reasons": null, "author": "Itchy_Carpet7335", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15lm0tu/page_reloads_on_back_button_click/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15lm0tu/page_reloads_on_back_button_click/", "subreddit_subscribers": 354956, "created_utc": 1691509930.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I've completed my fourth semester and have been engaged in web development for a year. I'm proficient in fundamental web technologies like HTML, CSS, JavaScript, and TypeScript. Most of my coding experience lies in working with React and the MERN stack. I've just acquired a free 7-month Coursera account. what are some of the courses that I as web dev and programming student should enroll that will help me level up my skill in the mentioned field?", "author_fullname": "t2_3x48mt9g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Recommendation for courses on Coursera.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15llyj3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691509791.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve completed my fourth semester and have been engaged in web development for a year. I&amp;#39;m proficient in fundamental web technologies like HTML, CSS, JavaScript, and TypeScript. Most of my coding experience lies in working with React and the MERN stack. I&amp;#39;ve just acquired a free 7-month Coursera account. what are some of the courses that I as web dev and programming student should enroll that will help me level up my skill in the mentioned field?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "15llyj3", "is_robot_indexable": true, "report_reasons": null, "author": "mypeperealhard", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15llyj3/recommendation_for_courses_on_coursera/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15llyj3/recommendation_for_courses_on_coursera/", "subreddit_subscribers": 354956, "created_utc": 1691509791.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I am generating TTS for pdfs and saving the audios seperately for each line with the name with line index like xpdf-1.mp3, xpdf-2.mp3 and so on. Now when im playing these audios one after another I want to highlight the lines depending on the index. Is there any good react library which has a nice functionality for highlighting lines depending on the index I give? In my TTS code im seperating the lines dependinding on the punctuation marks ( \".\" \";\" \"!\" \"?\"). So it would be good if those followed similar format.", "author_fullname": "t2_7w4skoj9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Which PDF reader library supports good highlighting?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15llfsb", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691508628.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am generating TTS for pdfs and saving the audios seperately for each line with the name with line index like xpdf-1.mp3, xpdf-2.mp3 and so on. Now when im playing these audios one after another I want to highlight the lines depending on the index. Is there any good react library which has a nice functionality for highlighting lines depending on the index I give? In my TTS code im seperating the lines dependinding on the punctuation marks ( &amp;quot;.&amp;quot; &amp;quot;;&amp;quot; &amp;quot;!&amp;quot; &amp;quot;?&amp;quot;). So it would be good if those followed similar format.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15llfsb", "is_robot_indexable": true, "report_reasons": null, "author": "KledMainSG", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15llfsb/which_pdf_reader_library_supports_good/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15llfsb/which_pdf_reader_library_supports_good/", "subreddit_subscribers": 354956, "created_utc": 1691508628.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hi i am making a web app using react which will only be used locally and be ported to electron and i have a problem using sqlite3 to connect to my db i know its better to have server and talk using api but i wanted to do it directly since it will be all local, but i keep getting this error about webpack &lt; 5 is there a way to fix this\n\n&amp;#x200B;\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\r  \nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\r  \n\r  \nIf you want to include a polyfill, you need to:\r  \n\\- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\r  \n\\- install 'util'\r  \nIf you don't want to include a polyfill, you can use an empty module like this:\r  \nresolve.fallback: { \"util\": false }\n\nand many more error msg similiar to this telling me to install this and add this to fallback but i cant really figure it out could someone help me", "author_fullname": "t2_41kmq31n", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React + sqlite3", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15ljg03", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691504115.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi i am making a web app using react which will only be used locally and be ported to electron and i have a problem using sqlite3 to connect to my db i know its better to have server and talk using api but i wanted to do it directly since it will be all local, but i keep getting this error about webpack &amp;lt; 5 is there a way to fix this&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;BREAKING CHANGE: webpack &amp;lt; 5 used to include polyfills for node.js core modules by default.&lt;/p&gt;\n\n&lt;p&gt;This is no longer the case. Verify if you need this module and configure a polyfill for it.&lt;/p&gt;\n\n&lt;p&gt;If you want to include a polyfill, you need to:&lt;/p&gt;\n\n&lt;p&gt;- add a fallback &amp;#39;resolve.fallback: { &amp;quot;util&amp;quot;: require.resolve(&amp;quot;util/&amp;quot;) }&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;- install &amp;#39;util&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;If you don&amp;#39;t want to include a polyfill, you can use an empty module like this:&lt;/p&gt;\n\n&lt;p&gt;resolve.fallback: { &amp;quot;util&amp;quot;: false }&lt;/p&gt;\n\n&lt;p&gt;and many more error msg similiar to this telling me to install this and add this to fallback but i cant really figure it out could someone help me&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15ljg03", "is_robot_indexable": true, "report_reasons": null, "author": "Nor1s", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15ljg03/react_sqlite3/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15ljg03/react_sqlite3/", "subreddit_subscribers": 354956, "created_utc": 1691504115.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Quick and very very simple description of system: \n\nWe use python/django currently to pull data from an API and store this in a sql database - this data is currently a few million rows in length but, scale wise, will end up being classified as big data in terms of how much we have. We then use React JS for a front-end web application.\n\nQuestion:\n\nWe are hoping to eventually move to using Azure Synapse and its database options going forward. Is it  sufficient to use React JS to now perform the HTTP request to the API and then use React JS to store this data in the Synapse Database? Or should i still use python? If i still use python, would having a django application still be sufficient for this ?", "author_fullname": "t2_apyt2dy8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Azure Synapse Database and React JS question...", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_15ldbe3", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1691487592.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Quick and very very simple description of system: &lt;/p&gt;\n\n&lt;p&gt;We use python/django currently to pull data from an API and store this in a sql database - this data is currently a few million rows in length but, scale wise, will end up being classified as big data in terms of how much we have. We then use React JS for a front-end web application.&lt;/p&gt;\n\n&lt;p&gt;Question:&lt;/p&gt;\n\n&lt;p&gt;We are hoping to eventually move to using Azure Synapse and its database options going forward. Is it  sufficient to use React JS to now perform the HTTP request to the API and then use React JS to store this data in the Synapse Database? Or should i still use python? If i still use python, would having a django application still be sufficient for this ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#b8001f", "id": "15ldbe3", "is_robot_indexable": true, "report_reasons": null, "author": "fullstackocoffee", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/15ldbe3/azure_synapse_database_and_react_js_question/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/15ldbe3/azure_synapse_database_and_react_js_question/", "subreddit_subscribers": 354956, "created_utc": 1691487592.0, "num_crossposts": 0, "media": null, "is_video": false}}], "before": null}}